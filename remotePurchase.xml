<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan delivered,confirmed,paid;
int value=10;
int[-1000,1000] warehouse=0,storage=0;
bool condition=true;
chan abort;</declaration>
	<template>
		<name x="5" y="5">buyer</name>
		<parameter>int account</parameter>
		<declaration>// Place local declarations here.
clock d;
int goods=0;
void pay()
{
account-=value;
warehouse+=value;
}

void receive()
{
goods+=1;
storage-=1;
}

void payback()
{
account+=value;
warehouse-=value;
}</declaration>
		<location id="id0" x="-246" y="-161">
			<name x="-289" y="-170">idel</name>
		</location>
		<location id="id1" x="68" y="-161">
			<name x="58" y="-195">payable</name>
		</location>
		<location id="id2" x="68" y="17">
			<name x="59" y="34">wait</name>
		</location>
		<location id="id3" x="-68" y="-59">
			<name x="-76" y="-85">aborted</name>
		</location>
		<location id="id4" x="-246" y="17">
			<name x="-306" y="25">confirmReceived</name>
		</location>
		<location id="id5" x="-340" y="-229">
			<name x="-323" y="-246">end</name>
		</location>
		<branchpoint id="id6" x="-408" y="-255">
		</branchpoint>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id5"/>
			<label kind="guard" x="-306" y="-221">account&lt;value || condition==false</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-204" y="-34">abort!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="-68" y="25">d&lt;=7</label>
			<label kind="synchronisation" x="-161" y="25">delivered?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-323" y="-59">confirmed!</label>
			<label kind="assignment" x="-314" y="-93">receive()</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="assignment" x="-153" y="-127">payback()</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="8" y="-34">d&gt;7</label>
			<label kind="synchronisation" x="-25" y="-51">abort!</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="76" y="-51">paid!</label>
			<label kind="assignment" x="76" y="-102">d=0,
pay()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-229" y="-195">account &gt;= value &amp;&amp; condition == true</label>
		</transition>
	</template>
	<template>
		<name>seller</name>
		<parameter>int goods</parameter>
		<declaration>
int account = 0;
void getmoney()
{
account+=value;
warehouse-=value;
}
void deliver()
{
goods-=1;
storage+=1;
}
void getback()
{
goods+=1;
storage-=1;
}</declaration>
		<location id="id7" x="-85" y="-221">
			<name x="-119" y="-246">idel</name>
		</location>
		<location id="id8" x="-85" y="-119">
			<name x="-68" y="-127">deliverConfirm</name>
		</location>
		<location id="id9" x="-85" y="0">
			<name x="-102" y="8">wait</name>
		</location>
		<location id="id10" x="59" y="-340">
			<name x="49" y="-374">end</name>
		</location>
		<location id="id11" x="-85" y="-340">
			<name x="-127" y="-365">start</name>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id11"/>
			<target ref="id7"/>
			<nail x="-85" y="-238"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id7"/>
			<label kind="guard" x="-153" y="-314">goods&gt;0</label>
			<label kind="assignment" x="-195" y="-289">condition=true</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="guard" x="-67" y="-374">goods&lt;=0</label>
			<label kind="assignment" x="-76" y="-357">condition=false</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id10"/>
			<label kind="guard" x="17" y="-306">goods==0</label>
			<label kind="assignment" x="-8" y="-281">condition=false</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-76" y="-187">paid?</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-220" y="-17">abort?</label>
			<label kind="assignment" x="-306" y="-102">getback()</label>
			<nail x="-238" y="0"/>
			<nail x="-238" y="-221"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-161" y="-153">abort?</label>
			<nail x="-170" y="-119"/>
			<nail x="-170" y="-212"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="110" y="-136">confirmed?</label>
			<label kind="assignment" x="110" y="-93">getmoney()</label>
			<nail x="93" y="0"/>
			<nail x="93" y="-221"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-110" y="-85">delivered!</label>
			<label kind="assignment" x="-144" y="-59">deliver()</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.


buyer1 = buyer(30);
buyer2 = buyer(20);
seller1 = seller(4);
system buyer1,buyer2,seller1;</system>
	<queries>
		<query>
			<formula>A[] seller1.goods=0 imply seller1.goods = 0</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
